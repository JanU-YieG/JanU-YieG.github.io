<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Borer&#39;s Blog</title>
        <link>https://janu-yieg.github.io/</link>
        <description>个人分享记录</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>janu.yieg.borer@gmail.com (borer)</managingEditor>
            <webMaster>janu.yieg.borer@gmail.com (borer)</webMaster><copyright>borer</copyright><lastBuildDate>Wed, 16 Feb 2022 11:01:44 &#43;0800</lastBuildDate>
            <atom:link href="https://janu-yieg.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>浅义理解React</title>
    <link>https://janu-yieg.github.io/understand-react/</link>
    <pubDate>Wed, 16 Feb 2022 11:01:44 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://janu-yieg.github.io/understand-react/</guid>
    <description><![CDATA[State &amp; 生命周期 &amp; 执行顺序 执行顺序 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 class Test extends React.Component { constructor(props) { super(props); this.state = { date: new Date() }; } componentDidMount() { this.timerId = setInterval(() =&gt; this.tick(), 1000); } componentWillUnmount() { clearInterval(this.timerId); } tick()]]></description>
</item><item>
    <title>面向对象与类和原型链</title>
    <link>https://janu-yieg.github.io/class_and_prototype/</link>
    <pubDate>Tue, 15 Feb 2022 14:26:39 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://janu-yieg.github.io/class_and_prototype/</guid>
    <description><![CDATA[面向对象 对象是指：数据和在这些数据上进行的操作的集合。 面向对象的编程范式在这里不多赘述 原型链 ES6的class 参考文档 ES6类 原型链]]></description>
</item><item>
    <title>Now Important</title>
    <link>https://janu-yieg.github.io/now_important/</link>
    <pubDate>Tue, 15 Feb 2022 14:24:13 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://janu-yieg.github.io/now_important/</guid>
    <description><![CDATA[既然选择学习或了解，那么需要明确这次的学习了解的主要目的是学习到了解到达到自己需要了解到的程度，带着这样的目的去学习去了解，不是为了把多少页]]></description>
</item><item>
    <title>马斯克访谈实录</title>
    <link>https://janu-yieg.github.io/masikefangtanjilu/</link>
    <pubDate>Sat, 15 Jan 2022 15:21:46 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://janu-yieg.github.io/masikefangtanjilu/</guid>
    <description><![CDATA[想要深入了解马斯克的所思所想？想要了解特斯拉和SpaceX面临的技术挑战？一场两个半小时视频对话，足以满足你的大部分好奇！ 就在9天之前，Yo]]></description>
</item><item>
    <title>如何编程的思考</title>
    <link>https://janu-yieg.github.io/ruhebiancheng/</link>
    <pubDate>Fri, 14 Jan 2022 17:33:01 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://janu-yieg.github.io/ruhebiancheng/</guid>
    <description><![CDATA[序言 编程语言很多，其设计理念也不一樣，那么如何才能使用该语言编写优秀程序且代码优美呢？其本质语言还是思想的表达，优美源于对美学的认识，对哲学]]></description>
</item><item>
    <title>天局</title>
    <link>https://janu-yieg.github.io/tianju/</link>
    <pubDate>Sat, 18 Dec 2021 14:31:46 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://janu-yieg.github.io/tianju/</guid>
    <description><![CDATA[]]></description>
</item><item>
    <title>IT技术更新频繁的想法</title>
    <link>https://janu-yieg.github.io/it-new-technology-think/</link>
    <pubDate>Sat, 04 Dec 2021 22:23:00 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://janu-yieg.github.io/it-new-technology-think/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://cdn5.maocdn.cn/img/2021/07/29/wp7334739-mix-colours-wallpapers.jpg" referrerpolicy="no-referrer">
            </div>针对技术多且变化快的想法: 如果一项技术发展没有问题，或者不想求方便，或者不想求完善完美，不想追求忧于已经存在的技术，主要还是该技术在被使用发]]></description>
</item><item>
    <title>Laravel</title>
    <link>https://janu-yieg.github.io/laravel/</link>
    <pubDate>Wed, 24 Nov 2021 13:36:56 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://janu-yieg.github.io/laravel/</guid>
    <description><![CDATA[<h2 id="sail">sail</h2>
<ol>
<li>sail相关常用命令：
<ul>
<li>sail up -d</li>
<li>php artisan sail:install</li>
</ul>
</li>
</ol>]]></description>
</item><item>
    <title>窮</title>
    <link>https://janu-yieg.github.io/qiong/</link>
    <pubDate>Mon, 27 Sep 2021 15:58:09 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://janu-yieg.github.io/qiong/</guid>
    <description><![CDATA[窮&mdash;-穷 身居洞穴，身体被迫弯屈、不自由。 物质上困顿、不得志、贫困。 追究、终结、尽、完]]></description>
</item><item>
    <title>Important Properties in Rust</title>
    <link>https://janu-yieg.github.io/important-properties-in-rust/</link>
    <pubDate>Fri, 24 Sep 2021 14:49:43 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://janu-yieg.github.io/important-properties-in-rust/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://s3.jpg.cm/2021/08/12/IXvMjt.jpg" referrerpolicy="no-referrer">
            </div>1.mutable &amp; immutable &amp; Shadowing &amp; const 2.Statements &amp; Expressions &amp; Rust is expression-based language. 3.let ..if.. 4.loop label &amp; break/continue expression/loop label 5.for..in.. 6.unit type(()) 7.Ownership Ownership Rules Each value in Rust has a variable that&rsquo;s called its owner. There can only be one owner at a time. When the owner goes out of scope, the value will be dropped. move &amp; clone &amp; copy(Copy trait) &amp; reference &amp;]]></description>
</item></channel>
</rss>
